#include <cstdio>
#include <cstring>
#include <cmath>
#include <random>
#include <iostream>

const double PI = acos(-1);

template <typename T> 
T max(T x, T y) {return x > y ? x : y;}
template <typename T> 
T min(T x, T y) {return x < y ? x : y;}

double rad(double r) {return r / 180 * PI;}


const int N = 10000, M = 70, C = 15;
const int dx[] = {1, 0, -1, 0, 1, 1, -1, -1};
const int dy[] = {0, 1, 0, -1, 1, -1, 1, -1};
const char stringBase[] = "0123456789()+-*/";

char Digit[16][65][40] = {{
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"...............########...............",
".............############.............",
"...........################...........",
"..........##################..........",
".........####################.........",
"........######################........",
".......########################.......",
".......##########....##########.......",
"......#########........#########......",
"......########..........########......",
".....#########..........#########.....",
".....########............########.....",
".....########............########.....",
".....########............########.....",
"....########..............########....",
"....########..............########....",
"....########..............########....",
"....########..............########....",
"....########..............########....",
"....########..............########....",
"....########..............########....",
"....########..............########....",
"....########..............########....",
"....########..............########....",
"....########..............########....",
".....########............########.....",
".....########............########.....",
".....########............########.....",
".....#########..........#########.....",
"......########..........########......",
"......#########........#########......",
".......##########....##########.......",
".......########################.......",
"........######################........",
".........####################.........",
"..........##################..........",
"...........################...........",
".............############.............",
"...............########...............",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................"
},
{
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"...................####...............",
".................#######..............",
"..............##########..............",
"...........#############..............",
"........################..............",
".......#################..............",
".......#################..............",
".......#################..............",
".......#################..............",
"........######..########..............",
"........###.....########..............",
"................########..............",
"................########..............",
"................########..............",
"................########..............",
"................########..............",
"................########..............",
"................########..............",
"................########..............",
"................########..............",
"................########..............",
"................########..............",
"................########..............",
"................########..............",
"................########..............",
"................########..............",
"................########..............",
"................########..............",
"................########..............",
"................########..............",
"................########..............",
"................########..............",
".......##########################.....",
"......###########################.....",
"......###########################.....",
"......###########################.....",
"......###########################.....",
".......##########################.....",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................"
},
{
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"..............#########...............",
"...........##############.............",
"........###################...........",
".......#####################..........",
"......#######################.........",
"......#######################.........",
"......########################........",
"......#########......#########........",
"......#######.........#########.......",
"......#######..........########.......",
"......#######..........########.......",
"......#######..........########.......",
"......#######..........########.......",
".......######..........########.......",
"......................#########.......",
"......................########........",
".....................#########........",
"....................##########........",
"...................##########.........",
"..................###########.........",
".................###########..........",
"................###########...........",
"...............###########............",
"..............###########.............",
".............###########..............",
"............###########...............",
"...........###########.....#####......",
"..........###########.....#######.....",
".........###########......#######.....",
"........###########.......#######.....",
".......###########........#######.....",
"......###########.........#######.....",
".....############################.....",
".....############################.....",
".....############################.....",
".....############################.....",
".....############################.....",
"......###########################.....",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
},
{
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"..............##########..............",
"..........################............",
"........####################..........",
".......######################.........",
".......#######################........",
".......########################.......",
".......########################.......",
".......########.......##########......",
".......#######.........#########......",
".......#######..........########......",
".......#######..........########......",
"........######..........########......",
"........................########......",
"........................########......",
".......................########.......",
"......................#########.......",
"...............###############........",
"..............###############.........",
"..............##############..........",
"..............###############.........",
"..............################........",
"...............################.......",
"......................##########......",
"........................########......",
"........................#########.....",
".........................########.....",
".........................########.....",
".........................########.....",
".........................########.....",
"........................#########.....",
".......###.............##########.....",
"......########........##########......",
"......##########################......",
"......#########################.......",
".....##########################.......",
"......########################........",
"......######################..........",
".........#################............",
"............###########...............",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................"
},
{
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
".....................#####............",
"....................#######...........",
"...................########...........",
"..................#########...........",
".................##########...........",
"................###########...........",
"................###########...........",
"...............############...........",
"..............#############...........",
".............##############...........",
"............###############...........",
"...........################...........",
"...........########.#######...........",
"..........########..#######...........",
".........########...#######...........",
"........########....#######...........",
".......#########....#######...........",
".......########.....#######...........",
"......########......#######...........",
".....########.......#######...........",
"....##############################....",
"....##############################....",
"....##############################....",
"....##############################....",
"....##############################....",
"....##############################....",
"...................########...........",
"...................########...........",
"...................########...........",
"...................########...........",
"...................########...........",
"...................########...........",
".............####################.....",
"............#####################.....",
"............#####################.....",
"............#####################.....",
"............#####################.....",
".............####################.....",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................"
},
{
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"........######################........",
"........#######################.......",
"........#######################.......",
"........#######################.......",
"........#######################.......",
"........######################........",
"........#######.......................",
"........#######.......................",
"........#######.......................",
"........#######.......................",
"........#######.......................",
"........#######.......................",
".......########..########.............",
".......####################...........",
".......######################.........",
".......#######################........",
".......########################.......",
".......########################.......",
".......#########################......",
".......########.......##########......",
"..........##...........#########......",
"........................#########.....",
".........................########.....",
".........................########.....",
".........................########.....",
".........................########.....",
".........................########.....",
".........................########.....",
"........#...............#########.....",
".......####............#########......",
"......########.......###########......",
"......##########################......",
"......#########################.......",
".....#########################........",
"......#######################.........",
".......#####################..........",
".........#################............",
".............##########...............",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................"
},
{
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
".........................######.......",
"....................###########.......",
".................###############......",
"...............#################......",
".............###################......",
"............####################......",
"...........####################.......",
"..........################............",
".........############.................",
"........###########...................",
"........#########.....................",
".......#########......................",
".......########.......................",
"......########........................",
"......########........................",
"......#######....########.............",
"......#######..#############..........",
".....#########################........",
".....##########################.......",
".....###########################......",
".....###########################......",
".....############......##########.....",
".....##########.........#########.....",
".....#########...........#########....",
".....########.............########....",
".....########.............########....",
".....########.............########....",
"......#######.............########....",
"......#######.............########....",
"......########...........#########....",
"......#########.........#########.....",
".......##########.....###########.....",
"........#########################.....",
"........########################......",
".........######################.......",
"..........####################........",
"...........##################.........",
".............##############...........",
"................########..............",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................"
},
{
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......###########################.....",
"......############################....",
"......############################....",
"......############################....",
"......############################....",
"......###########################.....",
"......#######...........#########.....",
"......#######...........#########.....",
"......#######..........#########......",
"......#######..........#########......",
"......#######..........########.......",
"......#######.........#########.......",
"......#######.........########........",
"......#######........#########........",
".......#####.........#########........",
".....................########.........",
"....................#########.........",
"....................########..........",
"...................#########..........",
"...................########...........",
"..................#########...........",
"..................#########...........",
"..................########............",
".................#########............",
".................########.............",
"................#########.............",
"................########..............",
"................########..............",
"...............########...............",
"...............########...............",
"..............#########...............",
"..............########................",
"..............########................",
".............########.................",
".............########.................",
".............#######..................",
".............#######..................",
"...............#####..................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................"
},
{
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"...............#########..............",
".............#############............",
"...........#################..........",
"..........###################.........",
".........#####################........",
"........#######################.......",
"........#######################.......",
"........#########.....#########.......",
".......#########.......#########......",
".......########.........########......",
".......########.........########......",
".......########.........########......",
".......########.........########......",
".......########.........########......",
"........########.......########.......",
"........#########.....#########.......",
".........#####################........",
"..........###################.........",
"...........#################..........",
"...........#################..........",
".........#####################........",
"........#######################.......",
".......#########......##########......",
"......########..........########......",
"......########..........#########.....",
".....########............########.....",
".....########............########.....",
".....########............########.....",
".....########............########.....",
".....#########..........#########.....",
".....#########..........#########.....",
"......##########......##########......",
"......##########################......",
".......########################.......",
".......########################.......",
"........######################........",
".........####################.........",
"...........################...........",
"..............##########..............",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................"
},
{
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"..............#########...............",
"............#############.............",
"..........#################...........",
".........###################..........",
"........#####################.........",
".......#######################........",
"......########################........",
"......##########......#########.......",
"......#########........#########......",
".....#########..........########......",
".....########............#######......",
".....########............#######......",
".....########............########.....",
".....########............########.....",
".....########............########.....",
".....#########..........#########.....",
"......########.........##########.....",
"......##########......###########.....",
".......##########################.....",
".......##########################.....",
"........#########################.....",
".........########################.....",
"...........############..########.....",
".............########....#######......",
".........................#######......",
"........................########......",
"........................########......",
".......................########.......",
"......................#########.......",
"....................##########........",
"..................############........",
"..............###############.........",
".........###################..........",
"........###################...........",
"........##################............",
"........################..............",
"........##############................",
"........############..................",
".........######.......................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................"
},
{
"......................................",
"......................................",
"......................................",
"......................................",
".......................####...........",
"......................######..........",
"....................########..........",
"...................##########.........",
"..................###########.........",
".................############.........",
"................############..........",
"...............###########............",
"..............###########.............",
".............###########..............",
".............##########...............",
"............##########................",
"............#########.................",
"...........#########..................",
"...........########...................",
"..........#########...................",
"..........########....................",
".........#########....................",
".........########.....................",
".........########.....................",
".........########.....................",
"........#########.....................",
"........########......................",
"........########......................",
"........########......................",
"........########......................",
"........########......................",
"........########......................",
"........########......................",
"........########......................",
"........########......................",
"........########......................",
".........########.....................",
".........########.....................",
".........########.....................",
".........#########....................",
"..........########....................",
"..........#########...................",
"..........#########...................",
"...........#########..................",
"...........##########.................",
"............#########.................",
".............#########................",
".............##########...............",
"..............###########.............",
"...............###########............",
"................###########...........",
".................############.........",
"..................###########.........",
"...................##########.........",
"....................#########.........",
".....................#######..........",
".......................####...........",
".........................#............",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................"
},
{
"......................................",
"......................................",
"......................................",
"......................................",
"...........####.......................",
"..........######......................",
".........#########....................",
".........##########...................",
".........###########..................",
".........############.................",
"..........############................",
"............###########...............",
".............###########..............",
"..............##########..............",
"...............##########.............",
"................##########............",
".................#########............",
"..................#########...........",
"...................########...........",
"...................#########..........",
"....................########..........",
"....................#########.........",
".....................########.........",
".....................########.........",
".....................########.........",
".....................#########........",
"......................########........",
"......................########........",
"......................########........",
"......................########........",
"......................########........",
"......................########........",
"......................########........",
"......................########........",
"......................########........",
"......................########........",
".....................########.........",
".....................########.........",
".....................########.........",
"....................#########.........",
"....................########..........",
"...................#########..........",
"...................#########..........",
"..................#########...........",
".................##########...........",
"................##########............",
"................#########.............",
"..............###########.............",
".............###########..............",
"............###########...............",
"...........###########................",
".........############.................",
".........###########..................",
".........##########...................",
".........#########....................",
"..........#######.....................",
"...........####.......................",
"............#.........................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................"
},
{
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
".................#####................",
"................#######...............",
"................#######...............",
"................#######...............",
"................#######...............",
"................#######...............",
"................#######...............",
"................#######...............",
"................#######...............",
"................#######...............",
"......###########################.....",
"......###########################.....",
"......###########################.....",
"......###########################.....",
"......###########################.....",
"......###########################.....",
"......###########################.....",
"................#######...............",
"................#######...............",
"................#######...............",
"................#######...............",
"................#######...............",
"................#######...............",
"................#######...............",
"................#######...............",
"................#######...............",
"................#######...............",
".................#####................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................"
},
{
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......##########################......",
".....############################.....",
".....############################.....",
".....############################.....",
".....############################.....",
".....############################.....",
"......###########################.....",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................"
},
{
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
".................####.................",
"................######................",
"................#######...............",
"...............########...............",
"...............########...............",
"................#######...............",
"................######................",
".......#####....######.....####.......",
".......######...######...#######......",
"......#########..#####.#########......",
"......###############.##########......",
"......##########################......",
"......##########################......",
".......########################.......",
"............##############............",
"...............########...............",
"..............###########.............",
".............#############............",
"...........########.#######...........",
"..........########..########..........",
"..........########..#########.........",
".........########....########.........",
".........########....########.........",
"..........#######.....#######.........",
"...........#####......######..........",
"............###.........##............",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................"
},
{
"......................................",
"......................................",
"......................................",
"...........................####.......",
"...........................######.....",
"..........................#######.....",
"..........................#######.....",
".........................########.....",
".........................#######......",
"........................########......",
"........................#######.......",
".......................########.......",
".......................#######........",
"......................########........",
"......................#######.........",
".....................########.........",
".....................########.........",
".....................#######..........",
"....................########..........",
"....................#######...........",
"...................########...........",
"...................#######............",
"..................########............",
"..................#######.............",
".................########.............",
".................#######..............",
"................########..............",
"................#######...............",
"...............########...............",
"...............#######................",
"...............#######................",
"..............########................",
"..............#######.................",
".............########.................",
".............#######..................",
"............########..................",
"............#######...................",
"...........########...................",
"...........#######....................",
"..........########....................",
"..........#######.....................",
".........########.....................",
".........#######......................",
"........########......................",
"........########......................",
"........#######.......................",
".......########.......................",
".......#######........................",
"......########........................",
"......#######.........................",
".....########.........................",
".....#######..........................",
"......######..........................",
".......#####..........................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................",
"......................................"
}};

int t;

bool vis[M][N];

struct Image {
	int n, m;
	char s[M][N];

	template <size_t _n, size_t _m>
	void init(char str[_n][_m]) {
		n = _n, m = _m;
		for (int i = 1; i <= n; i ++) {
			for (int j = 1; j <= m; j ++) {
				s[i][j] = str[i - 1][j - 1];
			}
		}
	}

	void input () {
		scanf("%d%d", &m, &n);
		for (int i = 1; i <= n; i ++)
			scanf("%s", s[i] + 1);	
	}

	void log() {
		fprintf(stderr, "%d %d\n", n, m);
		for (int i = 1; i <= n; i ++) {
			for (int j = 1; j <= m; j ++) {
				fprintf(stderr, "%c", s[i][j]);
			}
			fprintf(stderr, "\n");
		}
	}

	void Denoise() {
		static char res[M][N];
		for (int i = 1; i <= n; i ++) {
			for (int j = 1; j <= m; j ++) {
				int white = 0, black = 0;
				white += (s[i][j] == '.');
				black += (s[i][j] == '#');
				for (int k = 0; k < 8; k ++) {
					int x = i + dx[k], y = j + dy[k];
					if (i < 1 || i > n || j < 1 || j > m) {
						white ++;
						continue;
					}
					white += (s[x][y] == '.');
					black += (s[x][y] == '#');
				}
				if (white > black) {
					res[i][j] = '.';
				} else {
					res[i][j] = '#';
				}
			}
		}
		for (int i = 1; i <= n; i ++) {
			for (int j = 1; j <= m; j ++) {
				s[i][j] = res[i][j];
			}
		}
	}

	void denoise() {
		Denoise();
		Denoise();
	}

	void bfs(int sx, int sy, int &size, int &xmin, int &xmax, int &ymin, int &ymax) {
		static int Qx[N * M], Qy[N * M], h, _t;
		xmin = 1e9, xmax = 0, ymin = 1e9, ymax = 0, size = 0;
		h = 0, _t = 0;
		Qx[_t] = sx, Qy[_t] = sy;
		vis[sx][sy] = 1;
		while (h <= _t) {
			int nowx = Qx[h], nowy = Qy[h]; 
			h ++, size ++;
			xmin = min(xmin, nowx);
			xmax = max(xmax, nowx);
			ymin = min(ymin, nowy);
			ymax = max(ymax, nowy);
			for (int i = 0; i < 4; i ++) {
				int xx = nowx + dx[i], yy = nowy + dy[i];
				if (xx < 1 || xx > n || yy < 1 || yy > m) continue;
				if (vis[xx][yy]) continue;
				if (s[xx][yy] == '.') continue;
				vis[xx][yy] = 1;
				_t ++, Qx[_t] = xx, Qy[_t] = yy;
			}
		}
	}

	void split(int &siz, Image** res) {
		memset(vis, 0, sizeof(vis));
		siz = 0;
		for (int j = 1; j <= m; j ++) {
			for (int i = 1; i <= n; i ++) {
				if (vis[i][j]) continue;
				if (s[i][j] != '#') continue;
				int siz_, xmin, xmax, ymin, ymax;
				bfs(i, j, siz_, xmin, xmax, ymin, ymax);
				if (siz_ <= 20) continue;
				siz ++;
				(*res)[siz].n = xmax - xmin + 1;
				(*res)[siz].m = ymax - ymin + 1;
				for (int _x = xmin; _x <= xmax; _x ++) 
					for (int _y = ymin; _y <= ymax; _y ++) 
						(*res)[siz].s[_x - xmin + 1][_y - ymin + 1] = s[_x][_y];
			}
		}
	}
	
	void resize(double mx, double my) {
		static char res[M][N];
		int minX = 1e9, maxX = -1e9, minY = 1e9, maxY = -1e9;
		for (int i = 1; i <= n; i ++) {
			for (int j = 1; j <= m; j ++) {
				if (s[i][j] == '#') {
					int x = i * mx, y = j * my;
					minX = min(minX, x);
					maxX = max(maxX, x);
					minY = min(minY, y);
					maxY = max(maxY, y);
				}
			}
		}
		int _n = maxX - minX + 1;
		int _m = maxY - minY + 1;
		for (int i = 1; i <= _n; i ++) {
			for (int j = 1; j <= _m; j ++) {
				res[i][j] = '.';
			}
		}
		for (int i = 1; i <= n; i ++) {
			for (int j = 1; j <= m; j ++) {
				if (s[i][j] == '#') {
					int x = i * mx, y = j * my;
					res[x - minX + 1][y - minY + 1] = '#';
				}
			}
		}
		for (int i = 1; i <= _n; i ++) {
			for (int j = 1; j <= _m; j ++) {
				s[i][j] = res[i][j];
			}
		}
		n = _n, m = _m;
	}

	void midPoint(int &midPointX, int &midPointY) {
		midPointX = 0, midPointY = 0;
		int cnt = 0;
		for (int i = 1; i <= n; i ++) {
			for (int j = 1; j <= m; j ++) {
				if (s[i][j] == '#') {
					midPointX += i;
					midPointY += j;
					cnt ++;
				}
			}
		}
		midPointX /= cnt;
		midPointY /= cnt;
	}

	void rotate(double r) {
		int centerX, centerY;
		midPoint(centerX, centerY);
		static char res[M][N];
		int minX = 1e9, maxX = -1e9, minY = 1e9, maxY = -1e9;
		for (int i = 1; i <= n; i ++) {
			for (int j = 1; j <= m; j ++) {
				if (s[i][j] == '#') {
					int x = cos(r) * (i - centerX) - sin(r) * (j - centerY) + centerX;
					int y = sin(r) * (i - centerX) + cos(r) * (j - centerY) + centerY;
					minX = min(minX, x);
					maxX = max(maxX, x);
					minY = min(minY, y);
					maxY = max(maxY, y);
				}
			}
		}
		int _n = maxX - minX + 1;
		int _m = maxY - minY + 1;
		for (int i = 1; i <= _n; i ++) {
			for (int j = 1; j <= _m; j ++) {
				res[i][j] = '.';
			}
		}
		for (int i = 1; i <= n; i ++) {
			for (int j = 1; j <= m; j ++) {
				if (s[i][j] == '#') {
					int x = cos(r) * (i - centerX) - sin(r) * (j - centerY) + centerX;
					int y = sin(r) * (i - centerX) + cos(r) * (j - centerY) + centerY;
					res[x - minX + 1][y - minY + 1] = '#';
				}
			}
		}
		for (int i = 1; i <= _n; i ++) {
			for (int j = 1; j <= _m; j ++) {
				s[i][j] = res[i][j];
			}
		}
		n = _n, m = _m;
	}

	void loss(double sx, double sy) {
		static char res[M][N];
		int minX = 1e9, maxX = -1e9, minY = 1e9, maxY = -1e9;
		for (int i = 1; i <= n; i ++) {
			for (int j = 1; j <= m; j ++) {
				if (s[i][j] == '#') {
					int x = i + sy * j, y = sx * i + j;
					minX = min(minX, x);
					maxX = max(maxX, x);
					minY = min(minY, y);
					maxY = max(maxY, y);
				}
			}
		}
		int _n = maxX - minX + 1;
		int _m = maxY - minY + 1;
		for (int i = 1; i <= _n; i ++) {
			for (int j = 1; j <= _m; j ++) {
				res[i][j] = '.';
			}
		}
		for (int i = 1; i <= n; i ++) {
			for (int j = 1; j <= m; j ++) {
				if (s[i][j] == '#') {
					int x = i + sy * j, y = sx * i + j;
					res[x - minX + 1][y - minY + 1] = '#';
				}
			}
		}
		for (int i = 1; i <= _n; i ++) {
			for (int j = 1; j <= _m; j ++) {
				s[i][j] = res[i][j];
			}
		}
		n = _n, m = _m;
	}

	double simialr(Image model) {
		model.resize(1.0 * n / model.n, 1.0 * m / model.m);
		double res = 0;
		for (int i = 1; i <= n; i ++) {
			for (int j = 1; j <= m; j ++) {
				if (model.s[i][j] == s[i][j]) {
					res += 1.0;
				}
			}
		}
		res /= 1.0 * n * m;
		return res;
	}
};

Image input, digit[17];
Image *number, *temp_digit;
Image charBase[17][C + 1];
int tot;
char expr[N];

void init() {
	input.input();
	input.denoise();

	for (int i = 0; i < 16; i ++) {
		digit[i].init<65, 40>(Digit[i]);
		temp_digit = new Image[2];
		int temp_size;
		digit[i].split(temp_size, &temp_digit);
		digit[i] = temp_digit[1];
		delete[] temp_digit;
	}

	std::random_device rd;
  	std::mt19937 gen(rd());
	std::uniform_real_distribution <> R (-15, 15);
	std::uniform_real_distribution <> S (-0.1, 0.1);

	for (int i = 0; i < 16; i ++) {
		charBase[i][0] = digit[i];
		for (int j = 1; j <= C; j ++) {
			charBase[i][j] = digit[i];
			double r = R(gen), sx = S(gen), sy = S(gen);
			charBase[i][j].rotate(rad(r));
			charBase[i][j].loss(sx, sy);
			charBase[i][j].log();
		}
	}

	number = new Image[3001];
	input.split(tot, &number);
} 

void trans() {
	for (int i = 1; i <= tot; i ++) {
		if (number[i].n * 1.0 < number[i].m * 0.8) {
			expr[i] = '-';
			continue;
		}
		char res;
		double maxSim = 0;
		for (int j = 0; j < 16; j ++) {
			if (j == 13) {
				continue;
			}
			for (int k = 0; k <= C; k ++) {
				double sim = number[i].simialr(charBase[j][k]);
				if (sim > maxSim) {
					maxSim = sim;
					res = stringBase[j];
				}
			}
		}
		expr[i] = res;
	}
}

int solve() {
	
}

int main() {
	freopen("input/030.txt", "r", stdin);
	freopen("log.txt", "w", stderr); 

	scanf("%d", &t);

	init(); trans();

	printf("%d\n", solve());
	return 0;
}
