#include <bits/stdc++.h>
#define max(x, y) ((x) > (y) ? (x) : (y))
#define min(x, y) ((x) < (y) ? (x) : (y))
using namespace std;

const int H = 100;
const int W = 10000;
const int M = 12;
const int SIZE = 10000;
const double PI = acos (-1);
using pointType = pair<int, int>;
const int dx[] = { 1, 0, -1, 0, 1, 1, -1, -1 };
const int dy[] = { 0, 1, 0, -1, 1, -1, 1, -1 };
template <typename T> struct Queue
{
    struct node
    {
        T data;
        node *next;
    } start{ T (), &start }, *end = &start;
    constexpr void
    push (const T &x)
    {
        node *p = new node{ x, &start };
        end->next = p;
        end = p;
    }
    constexpr void
    pop ()
    {
        node *p = start.next;
        start.next = p->next;
        if (p == end)
            end = &start;
        delete p;
    }
    constexpr T
    front ()
    {
        return start.next->data;
    }
    constexpr T
    back ()
    {
        return end->data;
    }
    constexpr bool
    empty ()
    {
        return &start == end;
    }
};
template <typename T> struct _pointer
{
    T *val = NULL;
    constexpr
    operator void * () const noexcept
    {
        return val;
    }
    constexpr T &
    operator[] (const size_t &_Pos) const noexcept
    {
        return val[_Pos];
    }
    _pointer (T *_Src) noexcept { val = _Src; }
    _pointer () noexcept {}
    ~_pointer () { delete[] val; }
    template <typename _Ty>
    constexpr T *
    operator+ (const _Ty _Val) const
    {
        return val + _Val;
    }
    template <typename _Ty>
    constexpr T *
    operator- (const _Ty _Val) const
    {
        return val - _Val;
    }
    constexpr _pointer &
    operator= (T *_Src)
    {
        val = _Src;
        return *this;
    }
};
struct sized_string
{
    _pointer<char> _M_arr = NULL;
    size_t _M_size;
    sized_string ()
    {
        _M_size = 0;
        _M_arr = new char[_M_size + 1];
        _M_arr[0] = '\0';
    }
    sized_string (const size_t &_Size) noexcept : _M_size (_Size)
    {
        _M_arr = new char[_M_size + 1];
        _M_arr[0] = '\0';
    }
    sized_string (const size_t &_Size, const sized_string &_Src) noexcept
        : _M_size (_Size)
    {
        _M_arr = new char[_M_size + 1];
        memcpy (_M_arr, _Src._M_arr, _Src._M_size + 1);
    }
    sized_string (const sized_string &_Src) noexcept : _M_size (_Src._M_size)
    {
        _M_arr = new char[_M_size + 1];
        memcpy (_M_arr, _Src._M_arr, _Src._M_size + 1);
    }
    sized_string &
    operator= (const sized_string &_Src) noexcept
    {
        _M_size = _Src._M_size;
        _M_arr = new char[_M_size + 1];
        memcpy (_M_arr, _Src._M_arr, _Src._M_size + 1);
        return *this;
    }
    sized_string (const size_t &_Size, const char *_Src) noexcept
        : _M_size (_Size)
    {
        _M_arr = new char[_M_size + 1];
        memcpy (_M_arr, _Src, strlen (_Src) + 1);
    }
    sized_string (const size_t &_Size, const char &_Src) noexcept
        : _M_size (_Size)
    {
        _M_arr = new char[_M_size + 1];
        memset (_M_arr, _Src, _M_size + 1);
    }
    sized_string (const char &_Src) noexcept : _M_size (1)
    {
        _M_arr = new char[2]{ _Src, '\0' };
    }
    sized_string (const char *_Src) noexcept : _M_size (strlen (_Src))
    {
        _M_arr = new char[_M_size + 1];
        memcpy (_M_arr, _Src, _M_size + 1);
    }
    sized_string (const string &_Src) noexcept : _M_size (_Src.length ())
    {
        _M_arr = new char[_M_size + 1];
        for (size_t i = 0; i < _M_size; ++i)
            _M_arr[i] = _Src[i];
    }
    sized_string
    operator+ (const sized_string &_Src) const noexcept
    {
        sized_string _res (_M_size + _Src._M_size, *this);
        memcpy (_res._M_arr + _M_size, _Src._M_arr, _Src._M_size + 1);
        return _res;
    }
    template <typename _Ty>
    constexpr friend sized_string
    operator+ (const _Ty &_L_Src, const sized_string &_R_Src) noexcept
    {
        return sized_string (_L_Src) + _R_Src;
    }
    friend sized_string
    operator+ (const char *_L_Src, const sized_string &_R_Src) noexcept
    {
        return sized_string (strlen (_L_Src), _L_Src) + _R_Src;
    }
    constexpr char &
    operator[] (const size_t &_Pos) const noexcept
    {
        return _M_arr[_Pos];
    }
    constexpr friend ostream &
    operator<< (ostream &_out, const sized_string &_Src) noexcept
    {
        for (size_t i = 0; i < _Src._M_size; ++i)
            _out << _Src._M_arr[i];
        return _out;
    }
    friend istream &
    operator>> (istream &_in, sized_string &_Src) noexcept
    {
        static string _tmp;
        _in >> _tmp;
        _Src = sized_string (_tmp);
        return _in;
    }
    template <typename _Ty>
    constexpr sized_string &
    operator+= (const _Ty &_Src) noexcept
    {
        return *this = *this + _Src;
    }
    sized_string &
    operator+= (const char *_Src) noexcept
    {
        return *this = *this + _Src;
    }
    constexpr size_t
    size () const noexcept
    {
        return _M_size;
    }
};
using _string = sized_string;
const _string charModel = "0123456789()+-*/";
const _string base[16][65] = { { "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "...............########...............",
                                 ".............############.............",
                                 "...........################...........",
                                 "..........##################..........",
                                 ".........####################.........",
                                 "........######################........",
                                 ".......########################.......",
                                 ".......##########....##########.......",
                                 "......#########........#########......",
                                 "......########..........########......",
                                 ".....#########..........#########.....",
                                 ".....########............########.....",
                                 ".....########............########.....",
                                 ".....########............########.....",
                                 "....########..............########....",
                                 "....########..............########....",
                                 "....########..............########....",
                                 "....########..............########....",
                                 "....########..............########....",
                                 "....########..............########....",
                                 "....########..............########....",
                                 "....########..............########....",
                                 "....########..............########....",
                                 "....########..............########....",
                                 "....########..............########....",
                                 ".....########............########.....",
                                 ".....########............########.....",
                                 ".....########............########.....",
                                 ".....#########..........#########.....",
                                 "......########..........########......",
                                 "......#########........#########......",
                                 ".......##########....##########.......",
                                 ".......########################.......",
                                 "........######################........",
                                 ".........####################.........",
                                 "..........##################..........",
                                 "...........################...........",
                                 ".............############.............",
                                 "...............########...............",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................" },
                               { "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "...................####...............",
                                 ".................#######..............",
                                 "..............##########..............",
                                 "...........#############..............",
                                 "........################..............",
                                 ".......#################..............",
                                 ".......#################..............",
                                 ".......#################..............",
                                 ".......#################..............",
                                 "........######..########..............",
                                 "........###.....########..............",
                                 "................########..............",
                                 "................########..............",
                                 "................########..............",
                                 "................########..............",
                                 "................########..............",
                                 "................########..............",
                                 "................########..............",
                                 "................########..............",
                                 "................########..............",
                                 "................########..............",
                                 "................########..............",
                                 "................########..............",
                                 "................########..............",
                                 "................########..............",
                                 "................########..............",
                                 "................########..............",
                                 "................########..............",
                                 "................########..............",
                                 "................########..............",
                                 "................########..............",
                                 "................########..............",
                                 ".......##########################.....",
                                 "......###########################.....",
                                 "......###########################.....",
                                 "......###########################.....",
                                 "......###########################.....",
                                 ".......##########################.....",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................" },
                               {
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "..............#########...............",
                                   "...........##############.............",
                                   "........###################...........",
                                   ".......#####################..........",
                                   "......#######################.........",
                                   "......#######################.........",
                                   "......########################........",
                                   "......#########......#########........",
                                   "......#######.........#########.......",
                                   "......#######..........########.......",
                                   "......#######..........########.......",
                                   "......#######..........########.......",
                                   "......#######..........########.......",
                                   ".......######..........########.......",
                                   "......................#########.......",
                                   "......................########........",
                                   ".....................#########........",
                                   "....................##########........",
                                   "...................##########.........",
                                   "..................###########.........",
                                   ".................###########..........",
                                   "................###########...........",
                                   "...............###########............",
                                   "..............###########.............",
                                   ".............###########..............",
                                   "............###########...............",
                                   "...........###########.....#####......",
                                   "..........###########.....#######.....",
                                   ".........###########......#######.....",
                                   "........###########.......#######.....",
                                   ".......###########........#######.....",
                                   "......###########.........#######.....",
                                   ".....############################.....",
                                   ".....############################.....",
                                   ".....############################.....",
                                   ".....############################.....",
                                   ".....############################.....",
                                   "......###########################.....",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                                   "......................................",
                               },
                               { "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "..............##########..............",
                                 "..........################............",
                                 "........####################..........",
                                 ".......######################.........",
                                 ".......#######################........",
                                 ".......########################.......",
                                 ".......########################.......",
                                 ".......########.......##########......",
                                 ".......#######.........#########......",
                                 ".......#######..........########......",
                                 ".......#######..........########......",
                                 "........######..........########......",
                                 "........................########......",
                                 "........................########......",
                                 ".......................########.......",
                                 "......................#########.......",
                                 "...............###############........",
                                 "..............###############.........",
                                 "..............##############..........",
                                 "..............###############.........",
                                 "..............################........",
                                 "...............################.......",
                                 "......................##########......",
                                 "........................########......",
                                 "........................#########.....",
                                 ".........................########.....",
                                 ".........................########.....",
                                 ".........................########.....",
                                 ".........................########.....",
                                 "........................#########.....",
                                 ".......###.............##########.....",
                                 "......########........##########......",
                                 "......##########################......",
                                 "......#########################.......",
                                 ".....##########################.......",
                                 "......########################........",
                                 "......######################..........",
                                 ".........#################............",
                                 "............###########...............",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................" },
                               { "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 ".....................#####............",
                                 "....................#######...........",
                                 "...................########...........",
                                 "..................#########...........",
                                 ".................##########...........",
                                 "................###########...........",
                                 "................###########...........",
                                 "...............############...........",
                                 "..............#############...........",
                                 ".............##############...........",
                                 "............###############...........",
                                 "...........################...........",
                                 "...........########.#######...........",
                                 "..........########..#######...........",
                                 ".........########...#######...........",
                                 "........########....#######...........",
                                 ".......#########....#######...........",
                                 ".......########.....#######...........",
                                 "......########......#######...........",
                                 ".....########.......#######...........",
                                 "....##############################....",
                                 "....##############################....",
                                 "....##############################....",
                                 "....##############################....",
                                 "....##############################....",
                                 "....##############################....",
                                 "...................########...........",
                                 "...................########...........",
                                 "...................########...........",
                                 "...................########...........",
                                 "...................########...........",
                                 "...................########...........",
                                 ".............####################.....",
                                 "............#####################.....",
                                 "............#####################.....",
                                 "............#####################.....",
                                 "............#####################.....",
                                 ".............####################.....",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................" },
                               { "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "........######################........",
                                 "........#######################.......",
                                 "........#######################.......",
                                 "........#######################.......",
                                 "........#######################.......",
                                 "........######################........",
                                 "........#######.......................",
                                 "........#######.......................",
                                 "........#######.......................",
                                 "........#######.......................",
                                 "........#######.......................",
                                 "........#######.......................",
                                 ".......########..########.............",
                                 ".......####################...........",
                                 ".......######################.........",
                                 ".......#######################........",
                                 ".......########################.......",
                                 ".......########################.......",
                                 ".......#########################......",
                                 ".......########.......##########......",
                                 "..........##...........#########......",
                                 "........................#########.....",
                                 ".........................########.....",
                                 ".........................########.....",
                                 ".........................########.....",
                                 ".........................########.....",
                                 ".........................########.....",
                                 ".........................########.....",
                                 "........#...............#########.....",
                                 ".......####............#########......",
                                 "......########.......###########......",
                                 "......##########################......",
                                 "......#########################.......",
                                 ".....#########################........",
                                 "......#######################.........",
                                 ".......#####################..........",
                                 ".........#################............",
                                 ".............##########...............",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................" },
                               { "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 ".........................######.......",
                                 "....................###########.......",
                                 ".................###############......",
                                 "...............#################......",
                                 ".............###################......",
                                 "............####################......",
                                 "...........####################.......",
                                 "..........################............",
                                 ".........############.................",
                                 "........###########...................",
                                 "........#########.....................",
                                 ".......#########......................",
                                 ".......########.......................",
                                 "......########........................",
                                 "......########........................",
                                 "......#######....########.............",
                                 "......#######..#############..........",
                                 ".....#########################........",
                                 ".....##########################.......",
                                 ".....###########################......",
                                 ".....###########################......",
                                 ".....############......##########.....",
                                 ".....##########.........#########.....",
                                 ".....#########...........#########....",
                                 ".....########.............########....",
                                 ".....########.............########....",
                                 ".....########.............########....",
                                 "......#######.............########....",
                                 "......#######.............########....",
                                 "......########...........#########....",
                                 "......#########.........#########.....",
                                 ".......##########.....###########.....",
                                 "........#########################.....",
                                 "........########################......",
                                 ".........######################.......",
                                 "..........####################........",
                                 "...........##################.........",
                                 ".............##############...........",
                                 "................########..............",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................" },
                               { "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......###########################.....",
                                 "......############################....",
                                 "......############################....",
                                 "......############################....",
                                 "......############################....",
                                 "......###########################.....",
                                 "......#######...........#########.....",
                                 "......#######...........#########.....",
                                 "......#######..........#########......",
                                 "......#######..........#########......",
                                 "......#######..........########.......",
                                 "......#######.........#########.......",
                                 "......#######.........########........",
                                 "......#######........#########........",
                                 ".......#####.........#########........",
                                 ".....................########.........",
                                 "....................#########.........",
                                 "....................########..........",
                                 "...................#########..........",
                                 "...................########...........",
                                 "..................#########...........",
                                 "..................#########...........",
                                 "..................########............",
                                 ".................#########............",
                                 ".................########.............",
                                 "................#########.............",
                                 "................########..............",
                                 "................########..............",
                                 "...............########...............",
                                 "...............########...............",
                                 "..............#########...............",
                                 "..............########................",
                                 "..............########................",
                                 ".............########.................",
                                 ".............########.................",
                                 ".............#######..................",
                                 ".............#######..................",
                                 "...............#####..................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................" },
                               { "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "...............#########..............",
                                 ".............#############............",
                                 "...........#################..........",
                                 "..........###################.........",
                                 ".........#####################........",
                                 "........#######################.......",
                                 "........#######################.......",
                                 "........#########.....#########.......",
                                 ".......#########.......#########......",
                                 ".......########.........########......",
                                 ".......########.........########......",
                                 ".......########.........########......",
                                 ".......########.........########......",
                                 ".......########.........########......",
                                 "........########.......########.......",
                                 "........#########.....#########.......",
                                 ".........#####################........",
                                 "..........###################.........",
                                 "...........#################..........",
                                 "...........#################..........",
                                 ".........#####################........",
                                 "........#######################.......",
                                 ".......#########......##########......",
                                 "......########..........########......",
                                 "......########..........#########.....",
                                 ".....########............########.....",
                                 ".....########............########.....",
                                 ".....########............########.....",
                                 ".....########............########.....",
                                 ".....#########..........#########.....",
                                 ".....#########..........#########.....",
                                 "......##########......##########......",
                                 "......##########################......",
                                 ".......########################.......",
                                 ".......########################.......",
                                 "........######################........",
                                 ".........####################.........",
                                 "...........################...........",
                                 "..............##########..............",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................" },
                               { "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "..............#########...............",
                                 "............#############.............",
                                 "..........#################...........",
                                 ".........###################..........",
                                 "........#####################.........",
                                 ".......#######################........",
                                 "......########################........",
                                 "......##########......#########.......",
                                 "......#########........#########......",
                                 ".....#########..........########......",
                                 ".....########............#######......",
                                 ".....########............#######......",
                                 ".....########............########.....",
                                 ".....########............########.....",
                                 ".....########............########.....",
                                 ".....#########..........#########.....",
                                 "......########.........##########.....",
                                 "......##########......###########.....",
                                 ".......##########################.....",
                                 ".......##########################.....",
                                 "........#########################.....",
                                 ".........########################.....",
                                 "...........############..########.....",
                                 ".............########....#######......",
                                 ".........................#######......",
                                 "........................########......",
                                 "........................########......",
                                 ".......................########.......",
                                 "......................#########.......",
                                 "....................##########........",
                                 "..................############........",
                                 "..............###############.........",
                                 ".........###################..........",
                                 "........###################...........",
                                 "........##################............",
                                 "........################..............",
                                 "........##############................",
                                 "........############..................",
                                 ".........######.......................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................" },
                               { "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 ".......................####...........",
                                 "......................######..........",
                                 "....................########..........",
                                 "...................##########.........",
                                 "..................###########.........",
                                 ".................############.........",
                                 "................############..........",
                                 "..............##########..............",
                                 ".............##########...............",
                                 "............##########................",
                                 "............#########.................",
                                 "...........#########..................",
                                 "...........########...................",
                                 "..........#########...................",
                                 "..........########....................",
                                 ".........#########....................",
                                 ".........########.....................",
                                 ".........########.....................",
                                 ".........########.....................",
                                 "........#########.....................",
                                 "........########......................",
                                 "........########......................",
                                 "........########......................",
                                 "........########......................",
                                 "........########......................",
                                 "........########......................",
                                 "........########......................",
                                 "........########......................",
                                 "........########......................",
                                 "........########......................",
                                 "........########......................",
                                 "........########......................",
                                 ".........########.....................",
                                 ".........########.....................",
                                 ".........########.....................",
                                 ".........#########....................",
                                 "..........########....................",
                                 "..........#########...................",
                                 "..........#########...................",
                                 "...........#########..................",
                                 "...........##########.................",
                                 "............#########.................",
                                 ".............#########................",
                                 ".............##########...............",
                                 "..............###########.............",
                                 "...............###########............",
                                 "................###########...........",
                                 ".................############.........",
                                 "..................###########.........",
                                 "...................##########.........",
                                 "....................#########.........",
                                 ".....................#######..........",
                                 ".......................####...........",
                                 ".........................#............",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................" },
                               { "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "...........####.......................",
                                 "..........######......................",
                                 ".........#########....................",
                                 ".........##########...................",
                                 ".........###########..................",
                                 ".........############.................",
                                 "..........############................",
                                 "............###########...............",
                                 ".............###########..............",
                                 "..............##########..............",
                                 "...............##########.............",
                                 "................##########............",
                                 ".................#########............",
                                 "..................#########...........",
                                 "...................########...........",
                                 "...................#########..........",
                                 "....................########..........",
                                 "....................#########.........",
                                 ".....................########.........",
                                 ".....................########.........",
                                 ".....................########.........",
                                 ".....................#########........",
                                 "......................########........",
                                 "......................########........",
                                 "......................########........",
                                 "......................########........",
                                 "......................########........",
                                 "......................########........",
                                 "......................########........",
                                 "......................########........",
                                 "......................########........",
                                 "......................########........",
                                 ".....................########.........",
                                 ".....................########.........",
                                 ".....................########.........",
                                 "....................#########.........",
                                 "....................########..........",
                                 "...................#########..........",
                                 "...................#########..........",
                                 "..................#########...........",
                                 ".................##########...........",
                                 "................##########............",
                                 "................#########.............",
                                 "..............###########.............",
                                 ".............###########..............",
                                 "............###########...............",
                                 "...........###########................",
                                 ".........############.................",
                                 ".........###########..................",
                                 ".........##########...................",
                                 ".........#########....................",
                                 "..........#######.....................",
                                 "...........####.......................",
                                 "............#.........................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................" },
                               { "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 ".................#####................",
                                 "................#######...............",
                                 "................#######...............",
                                 "................#######...............",
                                 "................#######...............",
                                 "................#######...............",
                                 "................#######...............",
                                 "................#######...............",
                                 "................#######...............",
                                 "................#######...............",
                                 "......###########################.....",
                                 "......###########################.....",
                                 "......###########################.....",
                                 "......###########################.....",
                                 "......###########################.....",
                                 "......###########################.....",
                                 "......###########################.....",
                                 "................#######...............",
                                 "................#######...............",
                                 "................#######...............",
                                 "................#######...............",
                                 "................#######...............",
                                 "................#######...............",
                                 "................#######...............",
                                 "................#######...............",
                                 "................#######...............",
                                 "................#######...............",
                                 ".................#####................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................" },
                               { "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......##########################......",
                                 ".....############################.....",
                                 ".....############################.....",
                                 ".....############################.....",
                                 ".....############################.....",
                                 ".....############################.....",
                                 "......###########################.....",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................" },
                               { "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 ".................####.................",
                                 "................######................",
                                 "................#######...............",
                                 "...............########...............",
                                 "...............########...............",
                                 "................#######...............",
                                 "................######................",
                                 ".......#####....######.....####.......",
                                 ".......######...######...#######......",
                                 "......#########..#####.#########......",
                                 "......###############.##########......",
                                 "......##########################......",
                                 "......##########################......",
                                 ".......########################.......",
                                 "............##############............",
                                 "...............########...............",
                                 "..............###########.............",
                                 ".............#############............",
                                 "...........########.#######...........",
                                 "..........########..########..........",
                                 "..........########..#########.........",
                                 ".........########....########.........",
                                 ".........########....########.........",
                                 "..........#######.....#######.........",
                                 "...........#####......######..........",
                                 "............###.........##............",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................" },
                               { "......................................",
                                 "......................................",
                                 "......................................",
                                 "...........................####.......",
                                 "...........................######.....",
                                 "..........................#######.....",
                                 "..........................#######.....",
                                 ".........................########.....",
                                 ".........................#######......",
                                 "........................########......",
                                 "........................#######.......",
                                 ".......................########.......",
                                 ".......................#######........",
                                 "......................########........",
                                 "......................#######.........",
                                 ".....................########.........",
                                 ".....................########.........",
                                 ".....................#######..........",
                                 "....................########..........",
                                 "....................#######...........",
                                 "...................########...........",
                                 "...................#######............",
                                 "..................########............",
                                 "..................#######.............",
                                 ".................########.............",
                                 ".................#######..............",
                                 "................########..............",
                                 "................#######...............",
                                 "...............########...............",
                                 "...............#######................",
                                 "...............#######................",
                                 "..............########................",
                                 "..............#######.................",
                                 ".............########.................",
                                 ".............#######..................",
                                 "............########..................",
                                 "............#######...................",
                                 "...........########...................",
                                 "...........#######....................",
                                 "..........########....................",
                                 "..........#######.....................",
                                 ".........########.....................",
                                 ".........#######......................",
                                 "........########......................",
                                 "........########......................",
                                 "........#######.......................",
                                 ".......########.......................",
                                 ".......#######........................",
                                 "......########........................",
                                 "......#######.........................",
                                 ".....########.........................",
                                 ".....#######..........................",
                                 "......######..........................",
                                 ".......#####..........................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................",
                                 "......................................" } };

double
rad (double r)
{
    return r / 180.0 * PI;
}

bool vis[H][W];

struct dightMap
{
    int w, h;
    _string str[H];

    dightMap () { w = 0, h = 0; }

    dightMap (int ww, int hh) : w (ww), h (hh)
    {
        for (int i = 1; i <= h; i++)
            {
                str[i] = _string (w + 2, '.');
            }
    }

    dightMap (const _string *arr) : w (38), h (65)
    {
        for (int i = 0; i < 65; ++i)
            {
                str[i + 1] = " " + arr[i];
            }
    }

    void
    input ()
    {
        cin >> w >> h;
        for (int i = 1; i <= h; i++)
            {
                cin >> str[i];
                str[i] = " " + str[i];
            }
    }

    void
    denoise1 ()
    {
        dightMap *temp = new dightMap (w, h);
        for (int i = 1; i <= h; i++)
            {
                for (int j = 1; j <= w; j++)
                    {
                        int white = 0, black = 0;
                        white += (str[i][j] == '.');
                        black += (str[i][j] == '#');
                        for (int k = 0; k < 8; k++)
                            {
                                int x = i + dx[k], y = j + dy[k];
                                if (i < 1 || i > h || j < 1 || j > w)
                                    {
                                        white++;
                                        continue;
                                    }
                                white += (str[x][y] == '.');
                                black += (str[x][y] == '#');
                            }
                        if (white > black)
                            {
                                temp->str[i][j] = '.';
                            }
                        else
                            {
                                temp->str[i][j] = '#';
                            }
                    }
            }
        // for (int i = 1; i <= h; i ++) {
        // 	str[i] = temp->str[i];
        // }
        swap (str, temp->str);
        delete temp;
    }

    void
    denoise ()
    {
        for (int i = 1; i <= h; i++)
            {
                for (int j = 1; j <= w; j++)
                    {
                        int black = 0, white = 0;
                        for (int k = 0; k < 8; k++)
                            {
                                int x = i + dx[k], y = j + dy[k];
                                if (x < 1 || x > h || y < 1 || y > w)
                                    {
                                        continue;
                                    }
                                if (str[x][y] == '#')
                                    black++;
                                if (str[x][y] == '.')
                                    white++;
                            }
                        if (black < white)
                            str[i][j] = '.';
                    }
            }
    }

    void
    Denoise ()
    {
        denoise1 ();
        denoise ();
    }

    void
    log ()
    {
        cerr << w << " " << h << "\n";
        for (int i = 1; i <= h; i++)
            {
                for (int j = 1; j <= w; j++)
                    {
                        cerr << str[i][j];
                    }
                cerr << "\n";
            }
    }

    pair<pointType, pointType>
    bfs (pointType startPoint)
    {
        Queue<pointType> Q;
        Q.push (startPoint);
        vis[startPoint.first][startPoint.second] = 1;
        int xMin, xMax, yMin, yMax;
        xMin = yMin = 1e9;
        xMax = yMax = 0;
        int siz = 0;
        while (!Q.empty ())
            {
                pointType now = Q.front ();
                Q.pop ();
                siz++;
                xMin = min (xMin, now.first);
                xMax = max (xMax, now.first);
                yMin = min (yMin, now.second);
                yMax = max (yMax, now.second);
                for (int k = 0; k < 8; k++)
                    {
                        int x = now.first + dx[k], y = now.second + dy[k];
                        if (x < 1 || x > h || y < 1 || y > w)
                            {
                                continue;
                            }
                        if (vis[x][y])
                            {
                                continue;
                            }
                        if (str[x][y] == '.')
                            {
                                continue;
                            }
                        vis[x][y] = 1;
                        Q.push ({ x, y });
                    }
            }
        if (siz <= 15)
            {
                return { { -1, -1 }, { -1, -1 } };
            }
        return { { xMin, yMin }, { xMax, yMax } };
    }

    vector<dightMap>
    split ()
    {
        vector<dightMap> result;
        vector<pair<pointType, pointType>> subMatrix;
        memset (vis, 0, sizeof (vis));
        for (int j = 1; j <= w; j++)
            {
                for (int i = 1; i <= h; i++)
                    {
                        if (str[i][j] == '#' && !vis[i][j])
                            {
                                subMatrix.push_back (bfs ({ i, j }));
                            }
                    }
            }
        dightMap *temp = new (dightMap);
        for (auto p : subMatrix)
            {
                if (p.first.first == -1)
                    {
                        continue;
                    }
                int xMin, xMax, yMin, yMax;
                xMin = p.first.first;
                xMax = p.second.first;
                yMin = p.first.second;
                yMax = p.second.second;
                int hh = xMax - xMin + 1, ww = yMax - yMin + 1;
                temp->h = hh, temp->w = ww;
                for (int i = xMin; i <= xMax; i++)
                    {
                        temp->str[i - xMin + 1] = " ";
                        for (int j = yMin; j <= yMax; j++)
                            {
                                temp->str[i - xMin + 1] += str[i][j];
                            }
                    }
                result.push_back (*temp);
            }
        delete temp;
        return result;
    }

    void
    resize (double mx, double my)
    {
        vector<pointType> point;
        int minX = 1e9, maxX = 0, minY = 1e9, maxY = 0;
        for (int i = 1; i <= h; i++)
            {
                for (int j = 1; j <= w; j++)
                    {
                        int x = ceil (i * mx);
                        int y = ceil (j * my);
                        minX = min (minX, x);
                        maxX = max (maxX, x);
                        minY = min (minY, y);
                        maxY = max (maxY, y);
                        if (str[i][j] == '#')
                            {
                                point.push_back ({ x, y });
                            }
                    }
            }
        dightMap *temp = new dightMap (maxY - minY + 1, maxX - minX + 1);
        for (auto _point : point)
            {
                temp->str[_point.first - minX + 1][_point.second - minY + 1]
                    = '#';
            }
        h = temp->h, w = temp->w;
        for (int i = 1; i <= h; i++)
            str[i] = _string (w + 1, '.');
        for (int i = 1; i <= h; i++)
            {
                //			for (int j = 1; j <= w; j ++) {
                //				if (temp -> str[i][j] == '#')
                //				str[i][j] = '#';
                //			}
                swap (str[i], temp->str[i]);
            }
        *temp = split ().at (0);
        h = temp->h, w = temp->w;
        for (int i = 1; i <= h; i++)
            str[i] = _string (w + 1, '.');
        for (int i = 1; i <= h; i++)
            {
                //			for (int j = 1; j <= w; j ++) {
                //				if (temp -> str[i][j] == '#')
                //				str[i][j] = '#';
                //			}
                swap (str[i], temp->str[i]);
            }
        delete temp;
    }

    constexpr pointType
    midPoint ()
    {
        int x = 0, y = 0, cnt = 0;
        for (int i = 1; i <= h; i++)
            {
                for (int j = 1; j <= w; j++)
                    {
                        if (str[i][j] == '#')
                            {
                                x += i;
                                y += j;
                                cnt++;
                            }
                    }
            }
        return { x / cnt, y / cnt };
    }

    void
    rotate (double r)
    {
        vector<pointType> point;
        point.clear ();
        int minX = 1e9, maxX = 0, minY = 1e9, maxY = 0;
        pointType mid = midPoint ();
        int centerX = mid.first, centerY = mid.second;
        for (int i = 1; i <= h; i++)
            {
                for (int j = 1; j <= w; j++)
                    {
                        int x = cos (r) * (i - centerX)
                                - sin (r) * (j - centerY) + centerX;
                        int y = sin (r) * (i - centerX)
                                + cos (r) * (j - centerY) + centerY;
                        minX = min (minX, x);
                        maxX = max (maxX, x);
                        minY = min (minY, y);
                        maxY = max (maxY, y);
                        if (str[i][j] == '#')
                            {
                                point.push_back ({ x, y });
                            }
                    }
            }
        dightMap *temp = new dightMap (maxY - minY + 1, maxX - minX + 1);
        for (auto _point : point)
            {
                temp->str[_point.first - minX + 1][_point.second - minY + 1]
                    = '#';
            }
        h = temp->h, w = temp->w;
        for (int i = 1; i <= h; i++)
            str[i] = _string (w + 1, '.');
        for (int i = 1; i <= h; i++)
            {
                //			for (int j = 1; j <= w; j ++) {
                //				if (temp -> str[i][j] == '#')
                //				str[i][j] = '#';
                //			}
                swap (str[i], temp->str[i]);
            }
        *temp = split ().at (0);
        h = temp->h, w = temp->w;
        for (int i = 1; i <= h; i++)
            str[i] = _string (w + 1, '.');
        for (int i = 1; i <= h; i++)
            {
                //			for (int j = 1; j <= w; j ++) {
                //				if (temp -> str[i][j] == '#')
                //				str[i][j] = '#';
                //			}
                swap (str[i], temp->str[i]);
            }
        delete temp;
    }

    void
    distortion (double rx, double ry)
    {
        vector<pointType> point;
        int minX = 1e9, maxX = 0, minY = 1e9, maxY = 0;
        for (int i = 1; i <= h; i++)
            {
                for (int j = 1; j <= w; j++)
                    {
                        int x = i + ry * j, y = rx * i + j;
                        minX = min (minX, x);
                        maxX = max (maxX, x);
                        minY = min (minY, y);
                        maxY = max (maxY, y);
                        if (str[i][j] == '#')
                            {
                                point.push_back ({ x, y });
                            }
                    }
            }
        dightMap *temp = new dightMap (maxY - minY + 1, maxX - minX + 1);
        for (auto _point : point)
            {
                temp->str[_point.first - minX + 1][_point.second - minY + 1]
                    = '#';
            }
        h = temp->h, w = temp->w;
        for (int i = 1; i <= h; i++)
            str[i] = _string (w + 1, '.');
        for (int i = 1; i <= h; i++)
            {
                //			for (int j = 1; j <= w; j ++) {
                //				if (temp -> str[i][j] == '#')
                //				str[i][j] = '#';
                //			}
                swap (str[i], temp->str[i]);
            }
        *temp = split ().at (0);
        h = temp->h, w = temp->w;
        for (int i = 1; i <= h; i++)
            str[i] = _string (w + 1, '.');
        for (int i = 1; i <= h; i++)
            {
                //			for (int j = 1; j <= w; j ++) {
                //				if (temp -> str[i][j] == '#')
                //				str[i][j] = '#';
                //			}
                swap (str[i], temp->str[i]);
            }
        delete temp;
    }

    double
    similar (dightMap &dight)
    {
        double res = 0;
        dightMap temp = dight, temp2 = *this;
        int hh = min (h, temp.h), ww = min (w, temp.w);
        temp.resize (1.0 * hh / temp.h, 1.0 * ww / temp.w);
        temp2.resize (1.0 * hh / temp2.h, 1.0 * ww / temp2.w);
        for (int i = 1; i <= hh; i++)
            {
                for (int j = 1; j <= ww; j++)
                    {
                        if (temp2.str[i][j] == temp.str[i][j])
                            {
                                res++;
                            }
                    }
            }
        res /= 1.0 * hh * ww;
        return res;
    }

    constexpr char
    trans (vector<vector<dightMap>> &charBase)
    {
        if (1.0 * h < w * 0.8)
            {
                return '-';
            }
        double maxSimilar = 0;
        int id = 0;
        for (int i = 0; i < 16; i++)
            {
                if (i == 13)
                    {
                        continue;
                    }
                double sim = 0;
                for (int j = 0; j <= M; j++)
                    {
                        double nowSimilar = similar (charBase[i][j]);
                        if (nowSimilar < 0.5)
                            break;
                        sim = max (sim, nowSimilar);
                        if (nowSimilar > maxSimilar)
                            {
                                maxSimilar = nowSimilar;
                                id = i;
                            }
                    }
                //			cerr << charModel[i] << " " << sim <<
                //"\n";
            }
        return charModel[id];
    }
};

char op[W], num[W];
int opTop, numTop, ansTop, ans[W];

constexpr int
pri (char c)
{
    switch (c)
        {
        case '+':
            return 1;
        case '-':
            return 1;
        case '*':
            return 2;
        case '/':
            return 2;
        case '(':
            return 0;
        case ')':
            return 0;
        }
    return -1;
}

int
calc (const _string &expression)
{
    int result = 0;
    //	for (auto c : expression) {
    for (size_t i = 0; i < expression.size (); ++i)
        {
            const char &c = expression[i];
            if (c >= '0' && c <= '9')
                {
                    num[++numTop] = c;
                }
            else
                {
                    if (c == '(')
                        {
                            op[++opTop] = c;
                        }
                    else if (c == ')')
                        {
                            while (op[opTop] != '(')
                                {
                                    num[++numTop] = op[opTop];
                                    opTop--;
                                }
                            opTop--;
                        }
                    else
                        {
                            while (opTop && pri (op[opTop]) >= pri (c))
                                {
                                    num[++numTop] = op[opTop];
                                    opTop--;
                                }
                            op[++opTop] = c;
                        }
                }
        }
    while (opTop)
        {
            num[++numTop] = op[opTop--];
        }
    for (int i = 1; i <= numTop; i++)
        {
            if (num[i] >= '0' && num[i] <= '9')
                {
                    ans[++ansTop] = num[i] - '0';
                }
            else
                {
                    switch (num[i])
                        {
                        case '+':
                            ans[ansTop - 1] += ans[ansTop];
                            break;
                        case '-':
                            ans[ansTop - 1] -= ans[ansTop];
                            break;
                        case '*':
                            ans[ansTop - 1] *= ans[ansTop];
                            break;
                        case '/':
                            ans[ansTop - 1] /= ans[ansTop];
                            break;
                        }
                    ansTop--;
                }
        }
    result = ans[ansTop];
    return result;
}

dightMap baseModel[20];
vector<vector<dightMap>> charBase (20);
dightMap inputData;
vector<dightMap> dight;

void
init ()
{
    random_device rd;
    mt19937 gen (rd ());
    uniform_real_distribution<double> disR (-15.0, 15.0);
    uniform_real_distribution<double> disS (-0.1, 0.1);
    for (int i = 0; i < 16; i++)
        {
            baseModel[i] = dightMap (base[i]);
            baseModel[i] = baseModel[i].split ().at (0);
            charBase[i].push_back (baseModel[i]);
            for (int t = 1; t <= M; t++)
                {
                    double r, sx, sy;
                    r = disR (gen), sx = disS (gen), sy = disS (gen);
                    dightMap *temp = new (dightMap);
                    *temp = baseModel[i];
                    temp->rotate (rad (r));
                    temp->distortion (sx, sy);
                    charBase[i].push_back (*temp);
                    delete temp;
                }
        }
    //	for (int i = 0; i < 16; i ++) {
    //		for (int t = 0; t <= M; t ++) {
    //			charBase[i][t].log();
    //		}
    //	}
}

void
solve ()
{
    init ();
    inputData.input ();
    inputData.Denoise ();
    //	inputData.log();
    dight = inputData.split ();
    _string expression = "";
    for (auto &_num : dight)
        {
            //		num.log();
            char c = _num.trans (charBase);
            expression += c;
            //		cerr << c << "\n";
        }
    //	cerr << expression << "\n";
    cout << calc (expression) << "\n";
}

int
main ()
{
    freopen ("039.txt", "r", stdin);
    //	freopen("039.log", "w", stderr);
    int Case;
    cin >> Case;
    solve ();
    return 0;
}